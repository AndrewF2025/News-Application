# News_app/urls.py
from django.urls import path, include
from rest_framework.routers import DefaultRouter
from rest_framework_simplejwt.views import (
    TokenObtainPairView,
    TokenRefreshView,
)
from django.contrib.auth import views as auth_views

from django.contrib.auth.views import PasswordChangeView, \
    PasswordChangeDoneView
from .views import (
    my_newsletters_view,
    publish_newsletter_view,
    edit_profile_view,
    subscriptions_view,
    subscribe_publisher_view,
    unsubscribe_publisher_view,
    subscribe_journalist_view,
    unsubscribe_journalist_view,
    UserViewSet, CategoryViewSet, PublisherViewSet,
    ArticleViewSet, NewsletterViewSet, CommentViewSet,
    home_view, articles_view, article_detail_view, add_comment_view,
    approve_article_view, approve_newsletter_view, newsletters_view,
    categories_view, category_articles_view, profile_view, register_view,
    my_articles_view, pending_approvals_view, create_article_view,
    edit_article_view, create_newsletter_view, delete_article_view,
    delete_newsletter_view, publish_article_view, edit_comment_view,
    delete_comment_view, newsletter_detail_view, edit_newsletter_view,
    create_category_view,
    create_publisher_view,
    edit_publisher_view,
    publishers_view,
    admin_publishers_view,
    delete_publisher_view,
    add_publisher_staff_view,
    edit_publisher_staff_view,
    delete_publisher_staff_view,
    view_publisher_staff_view,
    admin_users_view,
    admin_home,
    view_user,
    edit_user,
    delete_user,
    RegisterAPIView,
    PasswordChangeAPIView,
    password_reset_api_view,
    api_subscribe,
    api_add_comment,
    api_list_subscriptions,
    api_unsubscribe,
    api_subscribed_content,
    api_subscribable_users,
)

router = DefaultRouter()
router.register(r'users', UserViewSet)
router.register(r'categories', CategoryViewSet)
router.register(r'publishers', PublisherViewSet)
router.register(r'articles', ArticleViewSet, basename='article')
router.register(r'newsletters', NewsletterViewSet, basename='newsletter')
router.register(r'comments', CommentViewSet, basename='comment')

urlpatterns = [
    path(
        'subscriptions/',
        subscriptions_view,
        name='subscriptions'
    ),
    path(
        'newsletters/<int:newsletter_id>/publish/',
        publish_newsletter_view,
        name='publish_newsletter'
    ),
    path(
        'subscriptions/publisher/<int:publisher_id>/subscribe/',
        subscribe_publisher_view,
        name='subscribe_publisher'
    ),
    path(
        'subscriptions/publisher/<int:publisher_id>/unsubscribe/',
        unsubscribe_publisher_view,
        name='unsubscribe_publisher'
    ),
    path(
        'subscriptions/journalist/<int:journalist_id>/subscribe/',
        subscribe_journalist_view,
        name='subscribe_journalist'
    ),
    path(
        'subscriptions/journalist/<int:journalist_id>/unsubscribe/',
        unsubscribe_journalist_view,
        name='unsubscribe_journalist'
    ),
    path(
        'password_change/',
        PasswordChangeView.as_view(
            template_name='news_app/password_change.html'
        ),
        name='password_change'
    ),
    path(
        'password_change/done/',
        PasswordChangeDoneView.as_view(
            template_name='news_app/password_change_done.html'
        ),
        name='password_change_done'
    ),
    path(
        'password_reset/',
        auth_views.PasswordResetView.as_view(
            template_name='news_app/password_reset_form.html'
        ),
        name='password_reset'
    ),
    path(
        'password_reset/done/',
        auth_views.PasswordResetDoneView.as_view(
            template_name='news_app/password_reset_done.html'
        ),
        name='password_reset_done'
    ),
    path(
        'reset/<uidb64>/<token>/',
        auth_views.PasswordResetConfirmView.as_view(
            template_name='news_app/password_reset_confirm.html'
        ),
        name='password_reset_confirm'
    ),
    path(
        'reset/done/',
        auth_views.PasswordResetCompleteView.as_view(
            template_name='news_app/password_reset_complete.html'
        ),
        name='password_reset_complete'
    ),
    # HTML Template Routes
    path(
        '',
        home_view,
        name='home'
    ),
    path(
        'articles/',
        articles_view,
        name='articles'
    ),
    path(
        'articles/<int:article_id>/',
        article_detail_view,
        name='article_detail'
    ),
    path(
        'articles/<int:article_id>/comment/',
        add_comment_view,
        name='add_comment'
    ),
    path(
        'articles/<int:article_id>/approve/',
        approve_article_view,
        name='approve_article'
    ),
    path(
        'newsletters/',
        newsletters_view,
        name='newsletters'
    ),
    path(
        'categories/',
        categories_view,
        name='categories'
    ),
    path(
        'categories/create/',
        create_category_view,
        name='create_category'
    ),
    path(
        'publishers/',
        publishers_view,
        name='publishers'
    ),
    path(
        'publishers/<int:publisher_id>/subscribe/',
        subscribe_publisher_view,
        name='subscribe_publisher'
    ),
    path(
        'publishers/create/',
        create_publisher_view,
        name='create_publisher'
    ),
    path(
        'publishers/<int:publisher_id>/edit/',
        edit_publisher_view,
        name='edit_publisher'
    ),
    path(
        'categories/<int:category_id>/',
        category_articles_view,
        name='category_articles'
    ),

    # Login and logout
    path(
        'login/',
        auth_views.LoginView.as_view(template_name='news_app/login.html'),
        name='login'
    ),
    path(
        'logout/',
        auth_views.LogoutView.as_view(next_page='home'),
        name='logout'
    ),

    # User profile, registration, and article management (template views)
    path(
        'profile/',
        profile_view,
        name='profile'
    ),
    path(
        'profile/edit/',
        edit_profile_view,
        name='edit_profile'
    ),
    path(
        'register/',
        register_view,
        name='register'
    ),
    path(
        'my-articles/',
        my_articles_view,
        name='my_articles'
    ),
    path(
        'my-newsletters/',
        my_newsletters_view,
        name='my_newsletters'
    ),
    path(
        'pending-approvals/',
        pending_approvals_view,
        name='pending_approvals'
    ),
    path(
        'articles/create/',
        create_article_view,
        name='create_article'
    ),
    path(
        'articles/<int:article_id>/edit/',
        edit_article_view,
        name='edit_article'
    ),
    path(
        'newsletters/create/',
        create_newsletter_view,
        name='create_newsletter'
    ),
    path(
        'articles/<int:article_id>/delete/',
        delete_article_view,
        name='delete_article'
    ),
    path(
        'newsletters/<int:newsletter_id>/delete/',
        delete_newsletter_view,
        name='delete_newsletter'
    ),
    path(
        'newsletters/<int:newsletter_id>/edit/',
        edit_newsletter_view,
        name='edit_newsletter'
    ),
    path(
        'newsletters/<int:newsletter_id>/approve/',
        approve_newsletter_view,
        name='approve_newsletter'
    ),
    path(
        'newsletters/<int:newsletter_id>/',
        newsletter_detail_view,
        name='newsletter_detail'
    ),
    path(
        'articles/<int:article_id>/publish/',
        publish_article_view,
        name='publish_article'
    ),
    path(
        'comments/<int:comment_id>/edit/',
        edit_comment_view,
        name='edit_comment'
    ),
    path(
        'comments/<int:comment_id>/delete/',
        delete_comment_view,
        name='delete_comment'
    ),
    path(
        'admin_home/publishers/',
        admin_publishers_view,
        name='admin_publishers'
    ),
    path(
        'admin_home/publishers/<int:publisher_id>/delete/',
        delete_publisher_view,
        name='delete_publisher'
    ),
    path(
        'admin_home/publishers/<int:publisher_id>/add-staff/<str:role>/',
        add_publisher_staff_view,
        name='add_publisher_staff'
    ),
    path(
        'admin_home/publisher-staff/<int:staff_id>/edit/',
        edit_publisher_staff_view,
        name='edit_publisher_staff'
    ),
    path(
        'admin_home/publisher-staff/<int:staff_id>/delete/',
        delete_publisher_staff_view,
        name='delete_publisher_staff'
    ),
    path(
        'admin_home/',
        admin_home,
        name='admin_home'
    ),
    path(
        'admin_home/publisher-staff/<int:staff_id>/view/',
        view_publisher_staff_view,
        name='view_publisher_staff'
    ),
    path(
        'admin_home/users/',
        admin_users_view,
        name='admin_users'
    ),
    path(
        'admin_home/users/<int:user_id>/view/',
        view_user,
        name='view_user'
    ),
    path(
        'admin_home/users/<int:user_id>/edit/',
        edit_user,
        name='edit_user'
    ),
    path(
        'admin_home/users/<int:user_id>/delete/',
        delete_user,
        name='delete_user'
    ),

    # --- API Endpoints Grouped ---
    # API routes (DRF router)
    path(
        'api/',
        include(router.urls),
    ),
    # Authentication endpoints
    path(
        'api/auth/login/',
        TokenObtainPairView.as_view(),
        name='token_obtain_pair'
    ),
    path(
        'api/auth/refresh/',
        TokenRefreshView.as_view(),
        name='token_refresh'
    ),
    # API Browser (for development)
    path(
        'api-auth/',
        include('rest_framework.urls', namespace='rest_framework')
    ),
    # Custom API endpoints
    path('api/register/', RegisterAPIView.as_view(), name='api_register'),
    path(
        'api/password/change/',
        PasswordChangeAPIView.as_view(),
        name='api_password_change'
    ),
    path(
        'api/password/reset/',
        password_reset_api_view,
        name='api_password_reset'
    ),
    path(
        'api/subscriptions/create/',
        api_subscribe,
        name='api_subscribe'
    ),
    path(
        'api/articles/<int:article_id>/comments/create/',
        api_add_comment,
        name='api_add_comment'
    ),
    path(
        'api/subscriptions/',
        api_list_subscriptions,
        name='api_list_subscriptions'
    ),
    path(
        'api/subscriptions/remove/',
        api_unsubscribe,
        name='api_unsubscribe'
    ),
    path(
        'api/subscriptions/content/',
        api_subscribed_content,
        name='api_subscribed_content'
    ),
    path(
        'api/subscriptions/subscribable/',
        api_subscribable_users,
        name='api_subscribable_users'
    ),
]
